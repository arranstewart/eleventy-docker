
name: build-push

on:
  push:
    paths-ignore:
      - '*.md'
      - '**.md'
      - '.gitignore'
      - '.dockerignore'
  pull_request:
    paths-ignore:
      - '*.md'
      - '**.md'
      - '.gitignore'
      - '.dockerignore'
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  DOCKER_HUB_OWNER: adstewart

jobs:
  docker_build:
    name: docker build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Log in to github Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up docker+QEMU (for emulation support)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Store useful variables for later steps
        id: useful_variables
        shell: bash
        run: |
          source METADATA.env

          echo "version=$IMAGE_VERSION" >> "$GITHUB_OUTPUT"
          echo "docker_hub_path=$IMAGE_NAMESPACE/$IMAGE_NAME" >> "$GITHUB_OUTPUT"

          image_path=$(python3 ./print_image_path.py)
          echo "image_path=$image_path" >> "$GITHUB_OUTPUT"

      - name: test variables
        run: |
          echo version is "${{ steps.useful_variables.outputs.version }}"
          echo docker_hub_path is "${{ steps.useful_variables.outputs.docker_hub_path }}"
          echo image_path is "${{ steps.useful_variables.outputs.image_path }}"


#      - name: Generate image labels
#        id: metadata
#        shell: bash
#        run: |
#          # our python script output gets sent to labels.txt
#          # the syntax for storing this content so its accessible in later steps uses shell-like
#          # EOF syntax.
#          # See <https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter>
#          # and <https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#example-of-a-multiline-string>
#          python3 print_docker_metadata.py > labels.txt
#          {
#            echo 'labels<<EOF'
#            cat labels.txt
#            echo 'EOF'
#          } >> "$GITHUB_OUTPUT"
#
#      - name: test image labels
#        run: |
#          printf '%q\n' "${{ steps.metadata.outputs.labels }}"
#
#      - name: Generate image tags
#        id: tags
#        shell: bash
#        run: |
#          set -x
#          {
#            echo 'tags<<EOF'
#            for version in "${{ steps.version.outputs.version }}" latest; do
#              printf '%s:%s\n' "$docker_hub_path" "$version";
#              printf 'ghcr.io/arranstewart/docker-pandoc/pandoc:%s\n' "$version";
#            done
#            echo 'EOF'
#          } >> "$GITHUB_OUTPUT"
#
#      - name: test image tags
#        run: |
#          printf '%q\n' "${{ steps.tags.outputs.tags }}"
#
#
#
#
#
#
#
#
